# parameters
nc: 10  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [ 3,4,  4,8,  7,6 ]  # P2/4
  - [ 7,11,  12,8,  10,17 ]  # P3/8
  - [ 20,11,  18,22,  34,17 ]  # P4/16
  - [ 30,39,  59,32,  72,69 ]  # P5/32
#  - [7,8, 6,14, 12,11]  # P2/4
#  - [8,22, 20,17, 13,32]  # P3/8
#  - [34,26, 21,51, 60,43]  # P4/16
#  - [50,105, 110,85, 195,140]  # P5/32

#  - [12,16, 19,36, 40,28]  # P3/8
#  - [36,75, 76,55, 72,146]  # P4/16
#  - [142,110, 192,243, 459,401]  # P5/32
# yolov7 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [32, 3, 1]],  # 0
  
   [-1, 1, Conv, [64, 3, 2]],  # 1-P1/2      
   [-1, 1, Conv, [64, 3, 1]],
   
   #[-1, 1, Conv, [128, 3, 2]],  # 3-P2/4

   #ELAN
   [-1, 1, Conv, [32, 1, 1]],
   [-2, 1, Conv, [32, 1, 1]],
   [-1, 1, Conv, [32, 3, 1]],
   [-1, 1, Conv, [32, 3, 1]],
   [-1, 1, Conv, [32, 3, 1]],
   [-1, 1, Conv, [32, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [128, 1, 1]],  # 11 128


   #DownSample
   [-1, 1, MP, []],
   [-1, 1, Conv, [64, 1, 1]],
   [-3, 1, Conv, [64, 1, 1]],
   [-1, 1, Conv, [64, 3, 2]],
   [[-1, -3], 1, Concat, [1]],  # 16-P3/4  128

   #ELAN
   [-1, 1, Conv, [64, 1, 1]],
   [-2, 1, Conv, [64, 1, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1]],  # 24

   #DownSample
   [-1, 1, MP, []],
   [-1, 1, Conv, [128, 1, 1]],
   [-3, 1, Conv, [128, 1, 1]],
   [-1, 1, Conv, [128, 3, 2]],
   [[-1, -3], 1, Concat, [1]],  # 29-P4/8  256

   #ELAN
   [-1, 1, Conv, [128, 1, 1]],
   [-2, 1, Conv, [128, 1, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [512, 1, 1]],  # 37  512
   

#DownSample
   [-1, 1, MP, []],
   [-1, 1, Conv, [256, 1, 1]],
   [-3, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [256, 3, 2]],
   [[-1, -3], 1, Concat, [1]],  # 42-P5/16  512


   #ELAN
   [-1, 1, Conv, [256, 1, 1]],
   [-2, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [1024, 1, 1]],  # 50  1024


   #DownSample
   [-1, 1, MP, []],
   [-1, 1, Conv, [512, 1, 1]],
   [-3, 1, Conv, [512, 1, 1]],
   [-1, 1, Conv, [512, 3, 2]],
   [[-1, -3], 1, Concat, [1]],  # 55-P6/32


   #ELAN
   [-1, 1, Conv, [256, 1, 1]],
   [-2, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [1024, 1, 1]],  # 63  1024
  ]

# yolov7 head
head:
  [[-1, 1, SPPFCSPC, [512]],
  #[-1, 1, SPPCSPC, [1024]], # 64
  
   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [49, 1, Conv, [256, 1, 1]], # route backbone P5
   [[-1, -2], 1, Concat, [1]],  #512
   
   [-1, 1, Conv, [256, 1, 1]],
   [-2, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],
   #[-1, 1, Conv, [512, 1, 1]], # 76
   [-1,2,STCSPA,[256]],

   [-1, 1, Conv, [128, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [36, 1, Conv, [128, 1, 1]], # route backbone P5
   [[-1, -2], 1, Concat, [1]],  #256
   
   [-1, 1, Conv, [128, 1, 1]],
   [-2, 1, Conv, [128, 1, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],
   #[-1, 1, Conv, [256, 1, 1]], 
   [-1,2,STCSPA,[128]],  #88  128

   [-1, 1, Conv, [64, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [23, 1, Conv, [64, 1, 1]], # route backbone P3
   [[-1, -2], 1, Concat, [1]],
   
   [-1, 1, Conv, [64, 1, 1]],
   [-2, 1, Conv, [64, 1, 1]],
   [-1, 1, Conv, [32, 3, 1]],
   [-1, 1, Conv, [32, 3, 1]],
   [-1, 1, Conv, [32, 3, 1]],
   [-1, 1, Conv, [32, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],
   #[-1, 1, Conv, [128, 1, 1]],
   [-1,2,STCSPA,[64]], #100

   [-1, 1, CBAM, [64]], #101


   [-1, 1, MP, []],
   [-1, 1, Conv, [64, 1, 1]],
   [-3, 1, Conv, [64, 1, 1]],
   [-1, 1, Conv, [64, 3, 2]],
   [[-1, -3, 87], 1, Concat, [1]], #256 106
   
   [-1, 1, Conv, [128, 1, 1]],
   [-2, 1, Conv, [128, 1, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],
   #[-1, 1, Conv, [256, 1, 1]], 
   [-1,2,STCSPA,[128]],  # 114

   [-1, 1, CBAM, [128]], #115
      
   [-1, 1, MP, []],
   [-1, 1, Conv, [128, 1, 1]],
   [-3, 1, Conv, [128, 1, 1]],
   [-1, 1, Conv, [128, 3, 2]],
   [[-1, -3, 75], 1, Concat, [1]], #512
   
   [-1, 1, Conv, [256, 1, 1]],
   [-2, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],
   #[-1, 1, Conv, [512, 1, 1]], 
   [-1,2,STCSPA,[256]],  # 128

   [-1, 1, CBAM, [256]], #129

   [-1, 1, MP, []],
   [-1, 1, Conv, [256, 1, 1]],
   [-3, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [256, 3, 2]],
   [[-1, -3, 63], 1, Concat, [1]], #1024
   
   [-1, 1, Conv, [512, 1, 1]],
   [-2, 1, Conv, [512, 1, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],
  # [-1, 1, Conv, [1024, 1, 1]], # 126
   [-1,2,STCSPA,[512]], # #141

   [-1, 1, CBAM, [512]], #142

#   [87, 1, RepConv, [128, 3, 1]],
#   [100, 1, RepConv, [256, 3, 1]],
#   [113, 1, RepConv, [512, 3, 1]],
#   [126, 1, RepConv, [1024, 3, 1]],

   [ 100, 1, RepConv, [ 128, 3, 1 ] ],
   [ 114, 1, RepConv, [ 256, 3, 1 ] ],
   [ 128, 1, RepConv, [ 512, 3, 1 ] ],
   [ 142, 1, RepConv, [ 1024, 3, 1 ] ],

   #[[127,128,129,130], 1, IDetect, [nc, anchors]],   # Detect(P2,P3, P4, P5)
   [[143,144,145,146], 1, IDetect, [nc, anchors]],   # Detect(P2,P3, P4, P5)
  ]
